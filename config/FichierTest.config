                                                                               
      ,--.  ,---.,--.   ,--.,---.       ,---.     ,--. ,--.,--.   ,--.,--.     
      |  | /  O  \\  `.'  //  O  \     '.-.  \    |  | |  ||   `.'   ||  |     
 ,--. |  ||  .-.  |\     /|  .-.  |     .-' .'    |  | |  ||  |'.'|  ||  |     
 |  '-'  /|  | |  | \   / |  | |  |    /   '-.    '  '-'  '|  |   |  ||  '--.  
  `-----' `--' `--'  `-'  `--' `--'    '-----'     `-----' `--'   `--'`-----'  
                                                                               
+-----------+
 FichierTest
+-----------+

------Date de création : 16/12/2020 15:56
------Auteur : Adrien PESTEL
------Proposé par : InnovAction
Liste de caractères utilisés : <> (agrégation) <//> (composition) |> (héritage)

+-----------+
 Utilisation 
+-----------+
Un commentaire s'écrit de cette manière : //

Pour masquer un élément (attribut, méthode...), commentez le
	Exemple : //- int entierA <-- pour masquer UN attribut

	Exemple : //-----Attributs <-- pour masquer TOUS les attributs

Pour ajouter une contrainte sur une association :
	ClasseA ------> ClasseB {contrainte}

Pour ajouter des multiplicités sur une association :
	ClasseA [0..1] ------> [1..*] ClasseB



+-------+
 Entités 
+-------+
------ Entité : Classe
Coord abstract
----Attribut(s) :
- int col 
- int lig 
- int act 

----Méthode(s) :
# int getCol() _ 
+ int getLig() 

----Association(s) :
Coord -------|> Point


------ Entité : Classe
test1 final
----Attribut(s) :
- int nbUser _ 
- int id
- String nom
- String prenom
- String pays 
- int age 
- Coord coordonees 
# int a1 
# String a2 
+ String a3 
+ int a4 

----Méthode(s) :
+ void main(String[] args) _ 
+ int getId() 
+ String getNom() 
+ String getPrenom()
+ String getPays() 
+ HashMap<String,Integer> setPays(String[][] pays) 
+ int getAge() 
+ void setNom(String nom) 
+ void setPrenom(String prenom) abstract  
+ String[][] setAge(HashMap<Integer,String> age) 

----Association(s) :
test1 -------|> Coord
test1 ------- Coord



------Fin
